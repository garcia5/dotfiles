# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="quarter-life"
#
# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"
# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="false"
unsetopt correct_all

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Zsh setup
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
autoload -U add-zsh-hook # hooks

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# Brew
if [ -d /opt/homebrew ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    # Autocomplete from installed apps
    FPATH="$(brew --prefix)/share/zsh/site-functions:$FPATH"
    # Let gcc play with brew
    export LDFLAGS="-L$(brew --prefix)/opt/zlib/lib -L$(brew --prefix)/opt/bzip2/lib -L$(brew --prefix openssl)/lib"
    export CPPFLAGS="-I$(brew --prefix)/opt/zlib/include -I$(brew --prefix)/opt/bzip2/include -I$(brew --prefix openssl)/include"
    export CFLAGS="-I$(brew --prefix openssl)/include \
        -I$(brew --prefix bzip2)/include \
        -I$(brew --prefix readline)/include \
        -I$(xcrun --show-sdk-path)/usr/include"
fi
# End Brew

# use `bat` for manpager
if type bat &> /dev/null; then
    export BAT_THEME="Catppuccin Mocha"
    [[ "$THEME_MODE" == "Light" ]] && export BAT_THEME="Catppuccin Latte"
fi

[ -f ~/.fzf.custom ] && source ~/.fzf.custom

# Python
[ -d "$HOME/.pyenv" ] && eval "$(pyenv init -)"
[ -f "$HOME/.rye/env" ] && source "$HOME/.rye/env"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
if [[ -d "$NVM_DIR" ]]; then
    nvm_default="$(nvm which default)"
    export DEFAULT_NODE_VERSION="$("$nvm_default" --version)"
    # Automatically use nvm version specified in .nvmrc (if any)
    # Intentionally not very flexible to avoid calling nvm every time we change directory
    function load-nvmrc {
        local nvmrc_path=".nvmrc"

        if [ -f "$nvmrc_path" ]; then
            local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

            if [ "$nvmrc_node_version" = "N/A" ]; then
                nvm install
            elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
                nvm use
            fi
        fi
    }

    # Load nvmrc if I'm switching branches
    branching=false
    function nvm-git-branch {
        local cmd="$1"
        if [[ $cmd && $cmd =~ "^git (checkout|branch)" && ! $braching ]]; then
            branching=true
        elif [[ $branching ]]; then
            load-nvmrc
            branching=false
        fi
    }

    add-zsh-hook preexec nvm-git-branch
    add-zsh-hook precmd nvm-git-branch
    add-zsh-hook chpwd load-nvmrc
fi
# NVM end

# OMZ config
plugins=(
    git
    zsh-interactive-cd
    zsh-vi-mode
)
# must come *after* FPATH is set by brew to make sure tab complete works
# automatically runs `compinit`
source "$ZSH/oh-my-zsh.sh"

load_syntax_highlights() {
    # https://github.com/catppuccin/zsh-syntax-highlighting
    syntax_highlights_theme="$HOME/.zsh/catppuccin_mocha-zsh-syntax-highlighting.zsh"
    [[ "$THEME_MODE" == "Light" ]] && syntax_highlights_theme="$HOME/.zsh/catppuccin_latte-zsh-syntax-highlighting.zsh"
    [ -f "$syntax_highlights_theme" ] && source "$syntax_highlights_theme"
    # syntax highlights, must run after compinit - https://github.com/zsh-users/zsh-syntax-highlighting?tab=readme-ov-file#faq
    syntax_highlights="$(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
    [ -f "$syntax_highlights" ] && source "$syntax_highlights"
}
load_syntax_highlights

# vi mode
# NOTE: edit command in $EDITOR happens from zsh-vi-mode with `vv`

# make sure fzf keybindings still apply
zvm_after_init() {
    eval "$(fzf --zsh)"
    [ -f "$HOME/.functions" ] && source "$HOME/.functions"
    load_syntax_highlights
}
# Do vim surround on the command line
export ZVM_VI_SURROUND_BINDKEY='classic'
# OMZ end

# Other configs
[ -s "$HOME/.aliases" ] && source "$HOME/.aliases"
[ -s "$HOME/.functions" ] && source "$HOME/.functions"
# End other configs

# PATH
# Lua ls
export PATH="$PATH:$HOME/lua-language-server/bin"

# rust
export PATH="$HOME/.cargo/bin:$PATH"

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# wez
export PATH="$PATH:/Applications/WezTerm.app/Contents/MacOS"
# alacritty
export PATH="$PATH:/Applications/Alacritty.app/Contents/MacOS"

# go
if command -v go > /dev/null 2>&1; then
    export PATH="$PATH:$(go env GOROOT)/bin"
    export PATH="$PATH:$(go env GOPATH)/bin"
fi

# flutter
export PATH="$HOME/devel/flutter/bin:$PATH"
# end PATH

# Machine-specific configs
[ -f "$HOME/.custom" ] && . "$HOME/.custom"
